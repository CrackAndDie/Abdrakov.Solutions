<UserControl x:Class="Abdrakov.CommonWPF.Views.Other.WindowHeaderView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:Abdrakov.CommonWPF.Views.Other"
             xmlns:converters="clr-namespace:Abdrakov.CommonWPF.Converters"
             mc:Ignorable="d"
             d:DesignHeight="22"
             d:DesignWidth="800"
             x:Name="windowHeaderView">
    <Control.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/Abdrakov.Styles;component/Styles/ProgressBar.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <converters:NullImageConverter x:Key="nullImageConverter" />

            <Style x:Key="TitleBarButtonStyle"
                   TargetType="{x:Type Button}">
                <Setter Property="Padding"
                        Value="0" />
                <Setter Property="WindowChrome.IsHitTestVisibleInChrome"
                        Value="True" />
                <Setter Property="IsTabStop"
                        Value="False" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border x:Name="border"
                                    Background="Transparent"
                                    BorderThickness="0"
                                    SnapsToDevicePixels="true">
                                <ContentPresenter x:Name="contentPresenter"
                                                  Margin="0"
                                                  HorizontalAlignment="Center"
                                                  VerticalAlignment="Center"
                                                  Focusable="False"
                                                  RecognizesAccessKey="True" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver"
                                         Value="true">
                                    <Setter TargetName="border"
                                            Property="Background"
                                            Value="Gray" />
                                </Trigger>
                                <Trigger Property="IsPressed"
                                         Value="true">
                                    <Setter TargetName="border"
                                            Property="Background"
                                            Value="DarkGray" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="TitleBarCloseButtonStyle"
                   TargetType="{x:Type Button}">
                <Setter Property="Padding"
                        Value="0" />
                <Setter Property="WindowChrome.IsHitTestVisibleInChrome"
                        Value="True" />
                <Setter Property="IsTabStop"
                        Value="False" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border x:Name="border"
                                    Background="Transparent"
                                    BorderThickness="0"
                                    SnapsToDevicePixels="true">
                                <ContentPresenter x:Name="contentPresenter"
                                                  Margin="0"
                                                  HorizontalAlignment="Center"
                                                  VerticalAlignment="Center"
                                                  Focusable="False"
                                                  RecognizesAccessKey="True" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver"
                                         Value="true">
                                    <Setter TargetName="border"
                                            Property="Background"
                                            Value="Red" />
                                </Trigger>
                                <Trigger Property="IsPressed"
                                         Value="true">
                                    <Setter TargetName="border"
                                            Property="Background"
                                            Value="DarkRed" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Control.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="22" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>
        <Image Grid.Column="0"
               Width="18"
               Height="18"
               Margin="2"
               x:Name="UpperLogoImage"
               Source="{Binding LogoImage, ElementName=windowHeaderView, Converter={StaticResource nullImageConverter}}"
               RenderOptions.BitmapScalingMode="Fant" />
        <TextBlock Grid.Column="1"
                   Margin="4 0 0 0"
                   VerticalAlignment="Center"
                   FontSize="14"
                   FontWeight="DemiBold"
                   Text="{Binding ProductName, ElementName=windowHeaderView}"
                   Foreground="{DynamicResource TextForegroundBrush}">
            <TextBlock.Style>
                <Style TargetType="TextBlock">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsActive, RelativeSource={RelativeSource AncestorType=Window}}"
                                     Value="False">
                            <Setter Property="Foreground"
                                    Value="{DynamicResource TextForegroundBrush}" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsActive, RelativeSource={RelativeSource AncestorType=Window}}"
                                     Value="True">
                            <Setter Property="Foreground"
                                    Value="{DynamicResource TextForegroundBrush}" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBlock.Style>
        </TextBlock>

        <Grid Grid.Column="7">
            <Grid Width="36"
                  Visibility="{Binding ProgressBarVisibility, ElementName=windowHeaderView}">
                <ProgressBar x:Name="ProgressAsyncPB"
                             ToolTip="Обновление данных приложения"
                             Style="{StaticResource AbdrakovCircularProgressBar}"
                             Foreground="{DynamicResource WindowStatusBrush}"
                             Value="0"
                             Width="18"
                             Height="18"
                             IsIndeterminate="True"
                             IsHitTestVisible="False" />
            </Grid>
            <Grid Width="36"
                  Visibility="{Binding CheckAllDoneVisibility, ElementName=windowHeaderView}">
                <Path Fill="{DynamicResource WindowStatusBrush}"
                      HorizontalAlignment="Center"
                      VerticalAlignment="Top"
                      IsHitTestVisible="False"
                      ToolTip="Приложение готово к работе"
                      RenderTransformOrigin="0.5, 0.5"
                      Data="M0.41,13.41L6,19L7.41,17.58L1.83,12M22.24,5.58L11.66,16.17L7.5,12L6.07,13.41L11.66,19L23.66,7M18,7L16.59,5.58L10.24,11.93L11.66,13.34L18,7Z">
                    <Path.RenderTransform>
                        <ScaleTransform ScaleX="0.75"
                                        ScaleY="0.75" />
                    </Path.RenderTransform>
                </Path>
            </Grid>
        </Grid>

        <Grid Grid.Column="8"
              Width="30"
              Visibility="{Binding MinimizeButtonVisibility, ElementName=windowHeaderView}">
            <Button Command="{Binding MinimizeWindowCommand, ElementName=windowHeaderView}"
                    CommandParameter="{Binding WindowParameter, ElementName=windowHeaderView}"
                    RenderOptions.EdgeMode="Aliased"
                    Style="{StaticResource TitleBarButtonStyle}">
                <Path Width="30"
                      Height="22"
                      Data="M 10,16 H 20"
                      Stroke="{DynamicResource TextForegroundBrush}"
                      StrokeThickness="1" />
            </Button>
        </Grid>
        <Grid Grid.Column="9">
            <Grid Width="30"
                  Visibility="{Binding MaximizeButtonVisibility, ElementName=windowHeaderView}">
                <Button Name="maximizeButton"
                        Command="{Binding MaximizeWindowCommand, ElementName=windowHeaderView}"
                        CommandParameter="{Binding WindowParameter, ElementName=windowHeaderView}"
                        Style="{StaticResource TitleBarButtonStyle}">
                    <Path Width="30"
                          Height="22"
                          Data="M 11,7 H 19 V 15 H 11 Z"
                          Stroke="{DynamicResource TextForegroundBrush}"
                          StrokeThickness="1" />
                </Button>
            </Grid>
            <Grid Width="30"
                  Visibility="{Binding RestoreButtonVisibility, ElementName=windowHeaderView}">
                <Button Name="restoreButton"
                        Command="{Binding RestoreWindowCommand, ElementName=windowHeaderView}"
                        CommandParameter="{Binding WindowParameter, ElementName=windowHeaderView}"
                        Style="{StaticResource TitleBarButtonStyle}">
                    <Path Width="30"
                          Height="22"
                          Data="M 10,8 H 17 V 15 H 10 Z M 12,8 V 6 H 19 V 13 H 17"
                          Stroke="{DynamicResource TextForegroundBrush}"
                          StrokeThickness="1" />
                </Button>
            </Grid>
        </Grid>
        <Grid Grid.Column="10"
              Width="30">
            <Button Command="{Binding CloseWindowCommand, ElementName=windowHeaderView}"
                    CommandParameter="{Binding WindowParameter, ElementName=windowHeaderView}"
                    Style="{StaticResource TitleBarCloseButtonStyle}">
                <Path Width="30"
                      Height="22"
                      Data="M 11,7 19,15 M 11,15 19,7"
                      Stroke="{DynamicResource TextForegroundBrush}"
                      StrokeThickness="1" />
            </Button>
        </Grid>
    </Grid>
</UserControl>
